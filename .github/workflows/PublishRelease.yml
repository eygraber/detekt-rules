name: Publish a release

on:
  push:
    branches:
      - release

env:
  VERSION_FILE: gradle.properties
  VERSION_EXTRACT_PATTERN: '(?<=VERSION_NAME=).+'
  GH_USER_NAME: github.actor
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -Xms128m -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1024m"

jobs:
  publish_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - name: Cache gradle
        uses: actions/cache@v2.1.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup git
        run: |
          git config user.name '${{ secrets.MAINTAINER_USER_NAME }}'
          git config user.email '${{ secrets.MAINTAINER_EMAIL }}'
          git config user.password ${{ secrets.GITHUB_TOKEN }}

      - name: Generate versions
        uses: HardNorth/github-version-generate@v1.1.1
        with:
          version-source: file
          version-file: ${{ env.VERSION_FILE }}
          version-file-extraction-pattern: ${{ env.VERSION_EXTRACT_PATTERN }}

      - uses: actions/setup-java@v1
        with:
              java-version: 11

      - name: Publish the artifacts
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
        run: ./release -PVERSION_NAME=${{ env.RELEASE_VERSION }} && ./gradlew closeAndReleaseRepository -PVERSION_NAME=${{ env.RELEASE_VERSION }}

      - name: Tag
        id: tag
        run: |
          git tag -a ${{ env.RELEASE_VERSION }}
          git push --tags

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          toTag: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          commit: release
          name: Release ${{ env.RELEASE_VERSION }}
          tag: ${{ env.RELEASE_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
